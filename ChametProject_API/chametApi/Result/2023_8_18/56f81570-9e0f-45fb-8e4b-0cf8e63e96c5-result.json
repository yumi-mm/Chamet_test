{"name": "test_StartVideoChat[B_primary：拨打视频聊（观众给房主）]", "status": "failed", "statusDetails": {"message": "AssertionError: 接口处理结果错误，请检查！", "trace": "self = <chametApi.TestCase.TenPartyAllowawaylucky28.test_079_startVideoChat.Test_StartVideoChat object at 0x0000029A98FB7290>\ncaseData = {'api': 'POST /startVideoChat', 'apiName': '拨打视频聊', 'caseName': '拨打视频聊（观众给房主）', 'data': {'appsign': '574410FF6BF6C8D2D0632868D9DC833E', 'callType': 14, 'ctype': '2', 'touserid': 2000004, ...}, ...}\n\n    @pytest.mark.parametrize('caseData', caseDataList, ids=caseNameList)\n    def test_StartVideoChat(self, caseData):\n        time.sleep(5)\n        user_type = 'audience'\n        allLogin(user_type)\n>       returnValue = request(caseData)\n\nTestCase\\TenPartyAllowawaylucky28\\test_079_startVideoChat.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncaseData = {'api': 'POST /startVideoChat', 'apiName': '拨打视频聊', 'caseName': '拨打视频聊（观众给房主）', 'data': {'appsign': '574410FF6BF6C8D2D0632868D9DC833E', 'callType': 14, 'ctype': '2', 'touserid': 2000004, ...}, ...}\n\n    def request(caseData):\n        try:\n            # 获取请求配置\n            fileName = os.path.dirname(__file__)[:-7] + '/ConfigData' + '/Request.yaml'\n            requestData = readYaml(fileName)\n            # 请求url\n            if 'baseUrl' in caseData:\n                url = caseData['baseUrl'] + caseData['url']\n            else:\n                url = requestData['baseUrl'] + caseData['url']\n            # 请求方式\n            method = caseData['method']\n            api = caseData['api']\n            apiName = caseData['apiName']\n            with allure.step('请求接口'):\n                allure.attach(api, '接口')\n                allure.attach(apiName, '接口名称')\n                allure.attach(url, '请求地址')\n                if method == 'get' or method == 'delete':\n                    # TODO 这里毛凯璐说项目里面全是post请求方式 故这里参数没做处理\n                    allure.attach(str(caseData['data']), '请求数据')\n                    if caseData['data'] == None:\n                        response = requests.get(url=url)\n                    else:\n                        response = requests.get(url=url + caseData['data'])\n                # post请求\n                elif method == 'post' or method == 'patch':\n                    setJsonParam(caseData)\n                    data = json.dumps(caseData['data'])\n                    allure.attach(str(json.dumps(caseData['data'], ensure_ascii=False)), '请求数据')\n                    if data == None:\n                        response = requests.post(url=url)\n                    else:\n                        print(\"url:{}\".format(url))\n                        print(\"data:{}\".format(caseData['data']))\n                        response = requests.post(url=url, json=caseData['data'])\n        except Exception as Error:\n            with allure.step('请求接口失败，请检查！'):\n                allure.attach(str(Error), '错误信息')\n            assert False, '请求接口失败，请检查！'\n        else:\n            requestSuccess = 'success'\n            # returnValue_str = response.text\n            # returnValue = json.loads(returnValue_str)\n            # print(returnValue)\n            ciphertext = response.text\n            des = ChametDESCrypt('')\n            text = des.decrypt(ciphertext)\n            returnValue = json.loads(text)\n            print('returnValue:{}'.format(returnValue))\n            with allure.step('接口返回数据'):\n                allure.attach(str(returnValue), '返回数据')\n            # 如果yaml里面配置了success的期望值\n            if 'success' in caseData:\n                requestSuccess = caseData['success']\n            status_code = response.status_code\n            if status_code != 200:\n                with allure.step('接口响应码错误，请检查！'):\n                    allure.attach(str(status_code), '接口响应码')\n                    assert False, '接口响应码错误，请检查！'\n            success = returnValue['msg']\n            if requestSuccess != success:\n                with allure.step('接口处理结果错误，请检查！'):\n                    allure.attach(str(returnValue), '接口返回数据')\n>                   assert False, '接口处理结果错误，请检查！'\nE                   AssertionError: 接口处理结果错误，请检查！\n\nCommon\\Request.py:79: AssertionError"}, "steps": [{"name": "请求接口", "status": "passed", "attachments": [{"name": "接口", "source": "5d23c5ea-e5f4-4e2f-9ce2-caa7493e64fa-attachment.attach"}, {"name": "接口名称", "source": "726da219-d1cc-45de-961e-8e952f46ba79-attachment.attach"}, {"name": "请求地址", "source": "11b8b32b-79c4-4eff-92f2-60ec6d652a8a-attachment.attach"}, {"name": "请求数据", "source": "ee85ab48-c067-47ee-9408-c73236bd8fbd-attachment.attach"}], "start": 1692325803938, "stop": 1692325804285}, {"name": "接口返回数据", "status": "passed", "attachments": [{"name": "返回数据", "source": "10c28da0-5ad7-49b0-be2e-fb63e0f43d3d-attachment.attach"}], "start": 1692325804285, "stop": 1692325804286}, {"name": "接口处理结果错误，请检查！", "status": "failed", "statusDetails": {"message": "AssertionError: 接口处理结果错误，请检查！\n", "trace": "  File \"C:\\Users\\pgk bqt\\PycharmProjects\\chametApi\\chametApi\\Common\\Request.py\", line 79, in request\n    assert False, '接口处理结果错误，请检查！'\n"}, "attachments": [{"name": "接口返回数据", "source": "e4147d52-9527-430a-b19a-e3b46c106ba7-attachment.attach"}], "start": 1692325804286, "stop": 1692325804287}], "parameters": [{"name": "caseData", "value": "{'caseName': '拨打视频聊（观众给房主）', 'data': {'callType': 14, 'touserid': 2000004, 'ctype': '2'}, 'api': 'POST /startVideoChat', 'apiName': '拨打视频聊', 'method': 'post', 'url': '/videoChat/callSameTime/startVideoChat', 'headers': 0, 'userid': '20113007', 'user': 'B_primary'}"}], "start": 1692325798247, "stop": 1692325804287, "uuid": "43fe3564-ff16-48ba-a502-eccb1274f1d7", "historyId": "c31c96aca7245d4329ccd2302688d85e", "testCaseId": "f16cd590defef23f65b8471b381cd324", "fullName": "TestCase.TenPartyAllowawaylucky28.test_079_startVideoChat.Test_StartVideoChat#test_StartVideoChat", "labels": [{"name": "story", "value": "拨打视频聊（观众给房主）"}, {"name": "parentSuite", "value": "TestCase.TenPartyAllowawaylucky28"}, {"name": "suite", "value": "test_079_startVideoChat"}, {"name": "subSuite", "value": "Test_StartVideoChat"}, {"name": "host", "value": "DESKTOP-8OL56K6"}, {"name": "thread", "value": "11616-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.TenPartyAllowawaylucky28.test_079_startVideoChat"}]}