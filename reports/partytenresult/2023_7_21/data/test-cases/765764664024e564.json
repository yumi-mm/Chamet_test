{"uid":"765764664024e564","name":"用例15：观众进入交友房进场座驾","fullName":"test_10party_mult.Test_multchamet#test_TenParty_015","historyId":"9b9fb1c6a0c6277dcefc1dc783510f42","time":{"start":1689910258217,"stop":1689910271248,"duration":13031},"status":"failed","statusMessage":"AssertionError: assert False\n +  where False = <bound method Multaudience.enterparty_car of <common.partytencommon.multparty_ten_audience.Multaudience object at 0x000002EDFDE82F90>>()\n +    where <bound method Multaudience.enterparty_car of <common.partytencommon.multparty_ten_audience.Multaudience object at 0x000002EDFDE82F90>> = <common.partytencommon.multparty_ten_audience.Multaudience object at 0x000002EDFDE82F90>.enterparty_car\n +      where <common.partytencommon.multparty_ten_audience.Multaudience object at 0x000002EDFDE82F90> = <test_case.test_10party_mult.Test_multchamet object at 0x000002EDFDDB8F90>.multaudience","statusTrace":"self = <test_case.test_10party_mult.Test_multchamet object at 0x000002EDFDDB8F90>\n\n    @allure.severity(allure.severity_level.BLOCKER)\n    @allure.title('用例15：观众进入交友房进场座驾')\n    def test_TenParty_015(self):\n        logging.info('===用例15：观众进入交友房进场座驾===')\n        try:\n            # party_list_num = self.multaudience.party_list()\n            # if party_list_num == 0:\n            #     pytest.skip(\"没有交友房，跳过该测试用例\")\n            # self.multaudience.audience_enter_tenparty(self.which_party)\n>           assert self.multaudience.enterparty_car()\nE           assert False\nE            +  where False = <bound method Multaudience.enterparty_car of <common.partytencommon.multparty_ten_audience.Multaudience object at 0x000002EDFDE82F90>>()\nE            +    where <bound method Multaudience.enterparty_car of <common.partytencommon.multparty_ten_audience.Multaudience object at 0x000002EDFDE82F90>> = <common.partytencommon.multparty_ten_audience.Multaudience object at 0x000002EDFDE82F90>.enterparty_car\nE            +      where <common.partytencommon.multparty_ten_audience.Multaudience object at 0x000002EDFDE82F90> = <test_case.test_10party_mult.Test_multchamet object at 0x000002EDFDDB8F90>.multaudience\n\ntest_10party_mult.py:338: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_class_fixture_Test_multchamet","time":{"start":1689910049955,"stop":1689910115903,"duration":65948},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert False\n +  where False = <bound method Multaudience.enterparty_car of <common.partytencommon.multparty_ten_audience.Multaudience object at 0x000002EDFDE82F90>>()\n +    where <bound method Multaudience.enterparty_car of <common.partytencommon.multparty_ten_audience.Multaudience object at 0x000002EDFDE82F90>> = <common.partytencommon.multparty_ten_audience.Multaudience object at 0x000002EDFDE82F90>.enterparty_car\n +      where <common.partytencommon.multparty_ten_audience.Multaudience object at 0x000002EDFDE82F90> = <test_case.test_10party_mult.Test_multchamet object at 0x000002EDFDDB8F90>.multaudience","statusTrace":"self = <test_case.test_10party_mult.Test_multchamet object at 0x000002EDFDDB8F90>\n\n    @allure.severity(allure.severity_level.BLOCKER)\n    @allure.title('用例15：观众进入交友房进场座驾')\n    def test_TenParty_015(self):\n        logging.info('===用例15：观众进入交友房进场座驾===')\n        try:\n            # party_list_num = self.multaudience.party_list()\n            # if party_list_num == 0:\n            #     pytest.skip(\"没有交友房，跳过该测试用例\")\n            # self.multaudience.audience_enter_tenparty(self.which_party)\n>           assert self.multaudience.enterparty_car()\nE           assert False\nE            +  where False = <bound method Multaudience.enterparty_car of <common.partytencommon.multparty_ten_audience.Multaudience object at 0x000002EDFDE82F90>>()\nE            +    where <bound method Multaudience.enterparty_car of <common.partytencommon.multparty_ten_audience.Multaudience object at 0x000002EDFDE82F90>> = <common.partytencommon.multparty_ten_audience.Multaudience object at 0x000002EDFDE82F90>.enterparty_car\nE            +      where <common.partytencommon.multparty_ten_audience.Multaudience object at 0x000002EDFDE82F90> = <test_case.test_10party_mult.Test_multchamet object at 0x000002EDFDDB8F90>.multaudience\n\ntest_10party_mult.py:338: AssertionError","steps":[],"attachments":[{"uid":"5dfc66b2ee43f535","name":"party_ten","source":"5dfc66b2ee43f535.png","type":"image/png","size":1612086},{"uid":"88bcf6f4beec6102","name":"log","source":"88bcf6f4beec6102.txt","type":"text/plain","size":454}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"stepsCount":0,"hasContent":true},"afterStages":[{"name":"_xunit_setup_class_fixture_Test_multchamet::0","time":{"start":1689912273134,"stop":1689912273134,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"labels":[{"name":"severity","value":"blocker"},{"name":"suite","value":"test_10party_mult"},{"name":"subSuite","value":"Test_multchamet"},{"name":"host","value":"DESKTOP-8OL56K6"},{"name":"thread","value":"19380-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_10party_mult"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"765764664024e564.json","parameterValues":[]}