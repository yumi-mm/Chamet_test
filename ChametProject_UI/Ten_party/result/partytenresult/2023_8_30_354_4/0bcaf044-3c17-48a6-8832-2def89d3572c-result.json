{"name": "用例70：通过半屏浮窗查看主播动态", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command. Original error: 'GET /screenshot' cannot be proxied to UiAutomator2 server because the instrumentation process is not running (probably crashed). Check the server log and/or the logcat output for more details\nStacktrace:\nUnknownError: An unknown server-side error occurred while processing the command. Original error: 'GET /screenshot' cannot be proxied to UiAutomator2 server because the instrumentation process is not running (probably crashed). Check the server log and/or the logcat output for more details\n    at UIA2Proxy.command (C:\\Users\\pgk bqt\\AppData\\Local\\Programs\\Appium Server GUI\\resources\\app\\node_modules\\appium\\node_modules\\appium-base-driver\\lib\\jsonwp-proxy\\proxy.js:274:13)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)\n    at AndroidUiautomator2Driver.commands.getScreenshot (C:\\Users\\pgk bqt\\AppData\\Local\\Programs\\Appium Server GUI\\resources\\app\\node_modules\\appium\\node_modules\\appium-uiautomator2-driver\\lib\\commands\\screenshot.js:14:10)", "trace": "self = <test_case.test_10party_mult.Test_multchamet object at 0x00000190E1C01250>\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title('用例70：通过半屏浮窗查看主播动态')\n    def test_TenParty_070(self):\n        logging.info('===用例70：通过半屏浮窗查看主播动态===')\n        try:\n            self.multaudience.enteranchor_HalfScreen()\n>           self.multaudience.watch_groupview(0)\n\ntest_10party_mult.py:1605: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.partytencommon.multparty_ten_audience.Multaudience object at 0x00000190E1A09BD0>\nnum = 0\n\n    def watch_groupview(self,num):\n        if self.abchor_groupview():\n            groupviewlist = self.driver.find_elements(MobileBy.XPATH,\"//android.view.ViewGroup/android.widget.LinearLayout[2]/android.widget.FrameLayout/androidx.recyclerview.widget.RecyclerView/android.widget.RelativeLayout\")\n            logging.info('===点击查看动态===')\n            groupviewlist[num].click()\n        else:\n>           pytest.skip(\"没有动态，跳过该测试用例\")\n\n..\\common\\partytencommon\\multparty_ten_audience.py:765: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nreason = '没有动态，跳过该测试用例'\n\n    @_with_exception(Skipped)\n    def skip(\n        reason: str = \"\", *, allow_module_level: bool = False, msg: Optional[str] = None\n    ) -> NoReturn:\n        \"\"\"Skip an executing test with the given message.\n    \n        This function should be called only during testing (setup, call or teardown) or\n        during collection by using the ``allow_module_level`` flag.  This function can\n        be called in doctests as well.\n    \n        :param reason:\n            The message to show the user as reason for the skip.\n    \n        :param allow_module_level:\n            Allows this function to be called at module level.\n            Raising the skip exception at module level will stop\n            the execution of the module and prevent the collection of all tests in the module,\n            even those defined before the `skip` call.\n    \n            Defaults to False.\n    \n        :param msg:\n            Same as ``reason``, but deprecated. Will be removed in a future version, use ``reason`` instead.\n    \n        .. note::\n            It is better to use the :ref:`pytest.mark.skipif ref` marker when\n            possible to declare a test to be skipped under certain conditions\n            like mismatching platforms or dependencies.\n            Similarly, use the ``# doctest: +SKIP`` directive (see :py:data:`doctest.SKIP`)\n            to skip a doctest statically.\n        \"\"\"\n        __tracebackhide__ = True\n        reason = _resolve_msg_to_reason(\"skip\", reason, msg)\n>       raise Skipped(msg=reason, allow_module_level=allow_module_level)\nE       Skipped: 没有动态，跳过该测试用例\n\nE:\\pycharm_file\\Chamet_project\\Lib\\site-packages\\_pytest\\outcomes.py:179: Skipped\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_case.test_10party_mult.Test_multchamet object at 0x00000190E1C01250>\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.title('用例70：通过半屏浮窗查看主播动态')\n    def test_TenParty_070(self):\n        logging.info('===用例70：通过半屏浮窗查看主播动态===')\n        try:\n            self.multaudience.enteranchor_HalfScreen()\n            self.multaudience.watch_groupview(0)\n            fl_user_head = self.audiencedriver.find_element(MobileBy.ID, \"com.hkfuliao.chamet:id/fl_user_head\")\n            assert fl_user_head\n            logging.info('===断言成功，进入动态页面===')\n        except AssertionError as e:\n            logging.info('===断言失败===')\n            screen_name = self.multaudience.screenshot('party_ten')\n            logging.info(f'截图成功，图片为{screen_name}')\n            raise\n        except:\n            logging.info('===执行失败===')\n>           screen_name = self.multaudience.screenshot('party_ten')\n\ntest_10party_mult.py:1616: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\common\\partytencommon\\multparty_ten_audience.py:79: in screenshot\n    self.driver.get_screenshot_as_file(image_file)\nE:\\pycharm_file\\Chamet_project\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:893: in get_screenshot_as_file\n    png = self.get_screenshot_as_png()\nE:\\pycharm_file\\Chamet_project\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:927: in get_screenshot_as_png\n    return b64decode(self.get_screenshot_as_base64().encode(\"ascii\"))\nE:\\pycharm_file\\Chamet_project\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:938: in get_screenshot_as_base64\n    return self.execute(Command.SCREENSHOT)[\"value\"]\nE:\\pycharm_file\\Chamet_project\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\nE:\\pycharm_file\\Chamet_project\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py:30: in check_response\n    raise wde\nE:\\pycharm_file\\Chamet_project\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py:26: in check_response\n    super().check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x00000190E1C4DC10>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"An unknown server-side error occurred while pro...\\\\\\node_modules\\\\\\\\appium\\\\\\\\node_modules\\\\\\\\appium-uiautomator2-driver\\\\\\\\lib\\\\\\\\commands\\\\\\\\screenshot.js:14:10)\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: An unknown server-side error occurred while processing the command. Original error: 'GET /screenshot' cannot be proxied to UiAutomator2 server because the instrumentation process is not running (probably crashed). Check the server log and/or the logcat output for more details\nE       Stacktrace:\nE       UnknownError: An unknown server-side error occurred while processing the command. Original error: 'GET /screenshot' cannot be proxied to UiAutomator2 server because the instrumentation process is not running (probably crashed). Check the server log and/or the logcat output for more details\nE           at UIA2Proxy.command (C:\\Users\\pgk bqt\\AppData\\Local\\Programs\\Appium Server GUI\\resources\\app\\node_modules\\appium\\node_modules\\appium-base-driver\\lib\\jsonwp-proxy\\proxy.js:274:13)\nE           at runMicrotasks (<anonymous>)\nE           at processTicksAndRejections (internal/process/task_queues.js:97:5)\nE           at AndroidUiautomator2Driver.commands.getScreenshot (C:\\Users\\pgk bqt\\AppData\\Local\\Programs\\Appium Server GUI\\resources\\app\\node_modules\\appium\\node_modules\\appium-uiautomator2-driver\\lib\\commands\\screenshot.js:14:10)\n\nE:\\pycharm_file\\Chamet_project\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: WebDriverException"}, "attachments": [{"name": "log", "source": "77df0847-b1e9-4675-98b8-a04b516ff5d9-attachment.txt", "type": "text/plain"}], "start": 1694166782086, "stop": 1694166794683, "uuid": "a56ebf01-bb27-450f-8ff4-76f3db128dba", "historyId": "7d851d9d6eaf9a269109e9d50e74165a", "testCaseId": "7d851d9d6eaf9a269109e9d50e74165a", "fullName": "test_10party_mult.Test_multchamet#test_TenParty_070", "labels": [{"name": "severity", "value": "critical"}, {"name": "suite", "value": "test_10party_mult"}, {"name": "subSuite", "value": "Test_multchamet"}, {"name": "host", "value": "DESKTOP-8OL56K6"}, {"name": "thread", "value": "6608-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_10party_mult"}]}