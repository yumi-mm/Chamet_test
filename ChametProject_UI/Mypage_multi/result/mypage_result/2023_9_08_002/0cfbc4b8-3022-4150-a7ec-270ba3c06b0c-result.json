{"name": "用例118：我的邀请-男-问号按钮", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidSessionIdException: Message: A session is either terminated or not started\nStacktrace:\nNoSuchDriverError: A session is either terminated or not started\n    at asyncHandler (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\appium-base-driver\\lib\\protocol\\protocol.js:243:15)\n    at C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\appium-base-driver\\lib\\protocol\\protocol.js:423:15\n    at Layer.handle [as handle_request] (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at logger (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\morgan\\index.js:144:5)\n    at Layer.handle [as handle_request] (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at jsonParser (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\body-parser\\lib\\types\\json.js:110:7)\n    at Layer.handle [as handle_request] (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at trim_prefix (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Layer.handle [as handle_request] (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\layer.js:91:12)\n    at trim_prefix (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:317:13)\n    at C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:284:7\n    at Function.process_params (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:275:10)", "trace": "self = <test_case.test_mypage_multi.Test_multi_mypage object at 0x000002A8FFBDB9D0>\n\n    @allure.story('我的邀请')\n    # @pytest.mark.skip(reason=\"本次不执行\")\n    @allure.severity(allure.severity_level.BLOCKER)\n    @allure.title('用例118：我的邀请-男-问号按钮')\n    def test_homepage118(self):\n        logging.info(\"===我的邀请-男-问号按钮===\")\n        try:\n            # time.sleep(3)\n>           self.multiman.tap(814,405)\n\ntest_mypage_multi.py:1804: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.mypage_multi.multiMypage_man.MultiMan object at 0x000002A880CCC610>, x = 814, y = 405\n\n    def tap(self, x, y):\n>       return TouchAction(self.driver).tap(x=x, y=y, count=1).perform()\n\n..\\baseView\\baseView.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <appium.webdriver.common.touch_action.TouchAction object at 0x000002A882394FD0>\n\n    def perform(self) -> 'TouchAction':\n        \"\"\"Perform the action by sending the commands to the server to be operated upon\n    \n        Returns:\n            `TouchAction`: Self instance\n        \"\"\"\n        if self._driver is None:\n            raise ValueError('Set driver to constructor as a argument when to create the instance.')\n        params = {'actions': self._actions}\n>       self._driver.execute(Command.TOUCH_ACTION, params)\n\nC:\\Users\\1\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\appium\\webdriver\\common\\touch_action.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <appium.webdriver.webdriver.WebDriver (session=\"af61c9c5-824c-4246-a5ff-a4f594565ac1\")>, driver_command = 'touchAction', params = {'actions': [{'action': 'tap', 'options': {'count': 1, 'x': 814, 'y': 405}}]}\n\n    def execute(self, driver_command: str, params: dict = None) -> dict:\n        \"\"\"\n        Sends a command to be executed by a command.CommandExecutor.\n    \n        :Args:\n         - driver_command: The name of the command to execute as a string.\n         - params: A dictionary of named parameters to send with the command.\n    \n        :Returns:\n          The command's JSON response loaded into a dictionary object.\n        \"\"\"\n        params = self._wrap_value(params)\n    \n        if self.session_id:\n            if not params:\n                params = {\"sessionId\": self.session_id}\n            elif \"sessionId\" not in params:\n                params[\"sessionId\"] = self.session_id\n    \n        response = self.command_executor.execute(driver_command, params)\n        if response:\n>           self.error_handler.check_response(response)\n\nC:\\Users\\1\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:444: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x000002A8FCFA9890>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"invalid session id\",\"message\":\"A session is either terminated or not star...eadableNT (_stream_readable.js:1168:12)\\\\n    at processTicksAndRejections (internal/process/task_queues.js:77:11)\"}}'}\n\n    def check_response(self, response: Dict) -> None:\n        try:\n            super().check_response(response)\n        except WebDriverException as wde:\n            if wde.msg == 'No such context found.':\n                raise NoSuchContextException(wde.msg, wde.screen, wde.stacktrace) from wde\n>           raise wde\n\nC:\\Users\\1\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x000002A8FCFA9890>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"invalid session id\",\"message\":\"A session is either terminated or not star...eadableNT (_stream_readable.js:1168:12)\\\\n    at processTicksAndRejections (internal/process/task_queues.js:77:11)\"}}'}\n\n    def check_response(self, response: Dict) -> None:\n        try:\n>           super().check_response(response)\n\nC:\\Users\\1\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x000002A8FCFA9890>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"invalid session id\",\"message\":\"A session is either terminated or not star...eadableNT (_stream_readable.js:1168:12)\\\\n    at processTicksAndRejections (internal/process/task_queues.js:77:11)\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSessionIdException: Message: A session is either terminated or not started\nE       Stacktrace:\nE       NoSuchDriverError: A session is either terminated or not started\nE           at asyncHandler (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\appium-base-driver\\lib\\protocol\\protocol.js:243:15)\nE           at C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\appium-base-driver\\lib\\protocol\\protocol.js:423:15\nE           at Layer.handle [as handle_request] (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\layer.js:95:5)\nE           at next (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\route.js:137:13)\nE           at Route.dispatch (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\route.js:112:3)\nE           at Layer.handle [as handle_request] (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\layer.js:95:5)\nE           at C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:281:22\nE           at param (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:354:14)\nE           at param (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:365:14)\nE           at Function.process_params (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:410:3)\nE           at next (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:275:10)\nE           at logger (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\morgan\\index.js:144:5)\nE           at Layer.handle [as handle_request] (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\layer.js:95:5)\nE           at trim_prefix (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:317:13)\nE           at C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:284:7\nE           at Function.process_params (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:335:12)\nE           at next (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:275:10)\nE           at C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\body-parser\\lib\\read.js:130:5\nE           at invokeCallback (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\raw-body\\index.js:224:16)\nE           at done (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\raw-body\\index.js:213:7)\nE           at IncomingMessage.onEnd (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\raw-body\\index.js:273:7)\nE           at IncomingMessage.emit (events.js:208:15)\nE           at endReadableNT (_stream_readable.js:1168:12)\nE           at processTicksAndRejections (internal/process/task_queues.js:77:11)\n\nC:\\Users\\1\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:249: InvalidSessionIdException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_case.test_mypage_multi.Test_multi_mypage object at 0x000002A8FFBDB9D0>\n\n    @allure.story('我的邀请')\n    # @pytest.mark.skip(reason=\"本次不执行\")\n    @allure.severity(allure.severity_level.BLOCKER)\n    @allure.title('用例118：我的邀请-男-问号按钮')\n    def test_homepage118(self):\n        logging.info(\"===我的邀请-男-问号按钮===\")\n        try:\n            # time.sleep(3)\n            self.multiman.tap(814,405)\n            context = self.mandriver.contexts\n            print(context)\n            logging.info(\"===问号按钮===\")\n            # self.mandriver.find_element(*MultiMan.MyInvite_instructionsBtn).click()\n            self.multiman.tap(814, 405)\n            item6=self.mandriver.find_element(*MultiMan.MyInvite_instructionsBtn)\n            self.mandriver.execute_script(\"arguments[0].click();\", item6)\n            assert self.mandriver.find_element(*MultiMan.MyInvite_instructionsPopover_rule1).text == '聊天卡免费用于视频聊天1分钟，每张卡有效期为5天'\n            assert self.mandriver.find_element(*MultiMan.MyInvite_instructionsPopover_rule2).text == '只有新的Chamet用户才能获得奖励'\n            self.multiman.tap(609,197)\n            logging.info('===断言成功===')\n    \n        except AssertionError as e:\n            logging.info('===断言失败===')\n            screen_name = self.multiman.screenshot('我的邀请-男-问号按钮')\n            logging.info(f'截图成功，图片为{screen_name}')\n            raise\n        except:\n            logging.info(\"===执行失败===\")\n>           screen_name = self.multiman.screenshot('我的邀请-男-问号按钮')\n\ntest_mypage_multi.py:1824: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\common\\mypage_multi\\mypage_common_fun.py:111: in screenshot\n    self.driver.get_screenshot_as_file(image_file)\nC:\\Users\\1\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:929: in get_screenshot_as_file\n    png = self.get_screenshot_as_png()\nC:\\Users\\1\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:965: in get_screenshot_as_png\n    return b64decode(self.get_screenshot_as_base64().encode(\"ascii\"))\nC:\\Users\\1\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:977: in get_screenshot_as_base64\n    return self.execute(Command.SCREENSHOT)[\"value\"]\nC:\\Users\\1\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:444: in execute\n    self.error_handler.check_response(response)\nC:\\Users\\1\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py:30: in check_response\n    raise wde\nC:\\Users\\1\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py:26: in check_response\n    super().check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x000002A8FCFA9890>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"invalid session id\",\"message\":\"A session is either terminated or not star...pium\\\\\\\\resources\\\\\\\\app\\\\\\\\node_modules\\\\\\\\appium\\\\\\\\node_modules\\\\\\\\express\\\\\\\\lib\\\\\\\\router\\\\\\\\index.js:275:10)\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSessionIdException: Message: A session is either terminated or not started\nE       Stacktrace:\nE       NoSuchDriverError: A session is either terminated or not started\nE           at asyncHandler (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\appium-base-driver\\lib\\protocol\\protocol.js:243:15)\nE           at C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\appium-base-driver\\lib\\protocol\\protocol.js:423:15\nE           at Layer.handle [as handle_request] (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\layer.js:95:5)\nE           at next (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\route.js:137:13)\nE           at Route.dispatch (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\route.js:112:3)\nE           at Layer.handle [as handle_request] (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\layer.js:95:5)\nE           at C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:281:22\nE           at param (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:354:14)\nE           at param (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:365:14)\nE           at Function.process_params (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:410:3)\nE           at next (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:275:10)\nE           at logger (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\morgan\\index.js:144:5)\nE           at Layer.handle [as handle_request] (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\layer.js:95:5)\nE           at trim_prefix (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:317:13)\nE           at C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:284:7\nE           at Function.process_params (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:335:12)\nE           at next (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:275:10)\nE           at jsonParser (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\body-parser\\lib\\types\\json.js:110:7)\nE           at Layer.handle [as handle_request] (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\layer.js:95:5)\nE           at trim_prefix (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:317:13)\nE           at C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:284:7\nE           at Function.process_params (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:335:12)\nE           at next (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:275:10)\nE           at Layer.handle [as handle_request] (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\layer.js:91:12)\nE           at trim_prefix (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:317:13)\nE           at C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:284:7\nE           at Function.process_params (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:335:12)\nE           at next (C:\\Program Files\\Appium\\resources\\app\\node_modules\\appium\\node_modules\\express\\lib\\router\\index.js:275:10)\n\nC:\\Users\\1\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:249: InvalidSessionIdException"}, "attachments": [{"name": "log", "source": "c55f1b2c-adb2-45cd-8a88-43db6bed03c4-attachment.txt", "type": "text/plain"}], "start": 1694139684291, "stop": 1694139684291, "uuid": "5b0d12a8-c98a-4ef3-a67b-17f349f12bbe", "historyId": "76cc28a2a45d158b217cfecae72dd6ef", "testCaseId": "76cc28a2a45d158b217cfecae72dd6ef", "fullName": "test_mypage_multi.Test_multi_mypage#test_homepage118", "labels": [{"name": "story", "value": "我的邀请"}, {"name": "severity", "value": "blocker"}, {"name": "suite", "value": "test_mypage_multi"}, {"name": "subSuite", "value": "Test_multi_mypage"}, {"name": "host", "value": "DESKTOP-0HF3IT4"}, {"name": "thread", "value": "14832-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_mypage_multi"}]}