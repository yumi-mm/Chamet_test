{"name": "用例122：我的打招呼-男女入口显示-进入显示", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.RelativeLayout/android.widget.FrameLayout[1]/android.widget.ScrollView/android.widget.ScrollView/android.widget.LinearLayout/android.widget.RelativeLayout[7]/android.widget.TextView[1]\"}\n  (Session info: chrome=115.0.5790.166)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00007FF7BC394A62+57106]\n\t(No symbol) [0x00007FF7BC30CF52]\n\t(No symbol) [0x00007FF7BC1DE2CB]\n\t(No symbol) [0x00007FF7BC21786E]\n\t(No symbol) [0x00007FF7BC21795C]\n\t(No symbol) [0x00007FF7BC250477]\n\t(No symbol) [0x00007FF7BC2369FF]\n\t(No symbol) [0x00007FF7BC24E522]\n\t(No symbol) [0x00007FF7BC236793]\n\t(No symbol) [0x00007FF7BC20CE81]\n\t(No symbol) [0x00007FF7BC20E064]\n\tGetHandleVerifier [0x00007FF7BC644222+2873042]\n\tGetHandleVerifier [0x00007FF7BC696590+3209792]\n\tGetHandleVerifier [0x00007FF7BC68F3AF+3180639]\n\tGetHandleVerifier [0x00007FF7BC425F25+652245]\n\t(No symbol) [0x00007FF7BC318618]\n\t(No symbol) [0x00007FF7BC3147C4]\n\t(No symbol) [0x00007FF7BC3148BC]\n\t(No symbol) [0x00007FF7BC304C33]\n\tBaseThreadInitThunk [0x00007FFCA0C87614+20]\n\tRtlUserThreadStart [0x00007FFCA23826B1+33]", "trace": "self = <test_case.test_mypage_multi.Test_multi_mypage object at 0x00000255560B2850>\n\n    # 打招呼已发送给所有在线用户。\n    @allure.story('我的打招呼')\n    # @pytest.mark.skip(reason=\"本次不执行\")\n    @allure.severity(allure.severity_level.BLOCKER)\n    @allure.title('用例122：我的打招呼-男女入口显示-进入显示')\n    def test_homepage122(self):\n        logging.info(\"===我的打招呼-男女入口显示-进入显示===\")\n        try:\n            logging.info(\"===我的打招呼-女入口显示-进入显示===\")\n            self.multiwoman.tab_Mine_Btn()\n            self.womandriver.find_element(*MultiWoman.MyGreetingWords_entry).click()\n            time.sleep(2)\n            global GrWords_woman\n            if self.multiwoman.MyGrWords_faceVerification_popoverAllEle():\n                GrWords_woman=0\n                logging.info(\"===我的打招呼-未通过真人检测===\")\n                assert self.womandriver.find_element(*MultiWoman.MyGrWords_faceVerification_popoverText).text == '为保障安全性，你需要先通过真人检测'\n            elif self.multiwoman.MyGrWords_edit_saveBtnEle():\n                GrWords_woman = 1\n                logging.info(\"===我的打招呼-已通过真人检测，没有消息记录===\")\n                self.multiwoman.tap(1007, 1436)\n                self.womandriver.find_element(*MultiWoman.MyGrWords_edit_contentText).send_keys('hi,a nice day ,call me')\n                self.womandriver.find_element(*MultiWoman.MyGrWords_edit_albumPhoto).click()\n                self.multiwoman.tap(1007, 1436)\n                self.multiwoman.get_permission_checkPopover()\n                self.multiwoman.tap(522,427)\n                self.womandriver.find_element(*MultiWoman.MyGrWords_edit_saveBtn).click()\n                self.womandriver.find_element(*MultiWoman.MyGreetingWords_entry).click()\n                assert self.womandriver.find_element(*MultiWoman.MyGrWords_wordListNumTotal)\n            else:\n                GrWords_woman = 2\n                logging.info(\"===我的打招呼-已通过真人检测，有消息记录===\")\n                assert self.womandriver.find_element(*MultiWoman.MyGrWords_Title).text == '我的打招呼'\n                assert self.multiwoman.MyGrWords_sendAllBtnEle()\n                logging.info(\"===女用户-断言成功===\")\n    \n>               logging.info(\"===我的打招呼-男女入口显示-进入显示===\")\n\ntest_mypage_multi.py:3894: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\1\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\appium\\webdriver\\webdriver.py:371: in find_element\n    return self.execute(RemoteCommand.FIND_ELEMENT, {'using': by, 'value': value})['value']\nC:\\Users\\1\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:444: in execute\n    self.error_handler.check_response(response)\nC:\\Users\\1\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py:30: in check_response\n    raise wde\nC:\\Users\\1\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py:26: in check_response\n    super().check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x0000025558648BD0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF7BC304C33]\\\\n\\\\tBaseThreadInitThunk [0x00007FFCA0C87614+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFCA23826B1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.RelativeLayout/android.widget.FrameLayout[1]/android.widget.ScrollView/android.widget.ScrollView/android.widget.LinearLayout/android.widget.RelativeLayout[7]/android.widget.TextView[1]\"}\nE         (Session info: chrome=115.0.5790.166)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00007FF7BC394A62+57106]\nE       \t(No symbol) [0x00007FF7BC30CF52]\nE       \t(No symbol) [0x00007FF7BC1DE2CB]\nE       \t(No symbol) [0x00007FF7BC21786E]\nE       \t(No symbol) [0x00007FF7BC21795C]\nE       \t(No symbol) [0x00007FF7BC250477]\nE       \t(No symbol) [0x00007FF7BC2369FF]\nE       \t(No symbol) [0x00007FF7BC24E522]\nE       \t(No symbol) [0x00007FF7BC236793]\nE       \t(No symbol) [0x00007FF7BC20CE81]\nE       \t(No symbol) [0x00007FF7BC20E064]\nE       \tGetHandleVerifier [0x00007FF7BC644222+2873042]\nE       \tGetHandleVerifier [0x00007FF7BC696590+3209792]\nE       \tGetHandleVerifier [0x00007FF7BC68F3AF+3180639]\nE       \tGetHandleVerifier [0x00007FF7BC425F25+652245]\nE       \t(No symbol) [0x00007FF7BC318618]\nE       \t(No symbol) [0x00007FF7BC3147C4]\nE       \t(No symbol) [0x00007FF7BC3148BC]\nE       \t(No symbol) [0x00007FF7BC304C33]\nE       \tBaseThreadInitThunk [0x00007FFCA0C87614+20]\nE       \tRtlUserThreadStart [0x00007FFCA23826B1+33]\n\nC:\\Users\\1\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:249: NoSuchElementException"}, "attachments": [{"name": "我的打招呼-男女入口显示-进入显示", "source": "d81e69f3-4cbf-4f04-940d-8619028b5af9-attachment.png", "type": "image/png"}, {"name": "log", "source": "041dab4c-cce2-49e8-8532-a44e034f15a1-attachment.txt", "type": "text/plain"}], "start": 1692347976466, "stop": 1692348002451, "uuid": "2a94fb73-305c-4182-be7f-1df956490b0d", "historyId": "4b0ffe3523fa75ea4093e1e988608745", "testCaseId": "4b0ffe3523fa75ea4093e1e988608745", "fullName": "test_mypage_multi.Test_multi_mypage#test_homepage122", "labels": [{"name": "story", "value": "我的打招呼"}, {"name": "severity", "value": "blocker"}, {"name": "suite", "value": "test_mypage_multi"}, {"name": "subSuite", "value": "Test_multi_mypage"}, {"name": "host", "value": "DESKTOP-0HF3IT4"}, {"name": "thread", "value": "7012-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_mypage_multi"}]}