{"name": "用例91-92：我的任务-男-有奖励红点或积分及未领取和领取奖励", "status": "broken", "statusDetails": {"message": "FileNotFoundError: [Errno 2] No such file or directory: 'C:\\\\Users\\\\pgk bqt\\\\PycharmProjects\\\\github_Chamet\\\\ChametProject_UI\\\\Mypage_multi\\\\common../../screenshots/my_page/我的任务-男-有奖励红点或积分及未领取和领取奖励_2023-09-05 17_17_03.png'", "trace": "self = <common.mypage_multi.multiMypage_man.MultiMan object at 0x000001EC9CE0C350>\n\n    def my_Tasks_entryTwoText(self):\n        try:\n>           MyTasks_entry_points = self.driver.find_element(*self.MyTasks_entry_points)\n\ncommon\\mypage_multi\\multiMypage_man.py:2746: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.webdriver.WebDriver (session=\"039635be-e5f7-48f3-b5c0-047624c1752f\")>, by = 'xpath'\nvalue = '/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.RelativeL...lView/android.widget.LinearLayout/android.widget.RelativeLayout[4]/android.widget.LinearLayout/android.widget.TextView'\n\n    def find_element(self, by: str = AppiumBy.ID, value: Union[str, Dict, None] = None) -> MobileWebElement:\n        \"\"\"\n        Find an element given a AppiumBy strategy and locator\n    \n        Args:\n            by: The strategy\n            value: The locator\n    \n        Usage:\n            driver.find_element(by=AppiumBy.ACCESSIBILITY_ID, value='accessibility_id')\n    \n        Returns:\n            `appium.webdriver.webelement.WebElement`: The found element\n    \n        \"\"\"\n        # We prefer to patch locators in the client code\n        # Checking current context every time a locator is accessed could significantly slow down tests\n        # Check https://github.com/appium/python-client/pull/724 before submitting any issue\n        # if by == By.ID:\n        #     by = By.CSS_SELECTOR\n        #     value = '[id=\"%s\"]' % value\n        # elif by == By.TAG_NAME:\n        #     by = By.CSS_SELECTOR\n        # elif by == By.CLASS_NAME:\n        #     by = By.CSS_SELECTOR\n        #     value = \".%s\" % value\n        # elif by == By.NAME:\n        #     by = By.CSS_SELECTOR\n        #     value = '[name=\"%s\"]' % value\n    \n>       return self.execute(RemoteCommand.FIND_ELEMENT, {'using': by, 'value': value})['value']\n\nE:\\pycharm_file\\Chamet_project\\Lib\\site-packages\\appium\\webdriver\\webdriver.py:387: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.webdriver.WebDriver (session=\"039635be-e5f7-48f3-b5c0-047624c1752f\")>, driver_command = 'findElement'\nparams = {'using': 'xpath', 'value': '/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLay...View/android.widget.LinearLayout/android.widget.RelativeLayout[4]/android.widget.LinearLayout/android.widget.TextView'}\n\n    def execute(self, driver_command: str, params: dict = None) -> dict:\n        \"\"\"Sends a command to be executed by a command.CommandExecutor.\n    \n        :Args:\n         - driver_command: The name of the command to execute as a string.\n         - params: A dictionary of named parameters to send with the command.\n    \n        :Returns:\n          The command's JSON response loaded into a dictionary object.\n        \"\"\"\n        params = self._wrap_value(params)\n    \n        if self.session_id:\n            if not params:\n                params = {\"sessionId\": self.session_id}\n            elif \"sessionId\" not in params:\n                params[\"sessionId\"] = self.session_id\n    \n        response = self.command_executor.execute(driver_command, params)\n        if response:\n>           self.error_handler.check_response(response)\n\nE:\\pycharm_file\\Chamet_project\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x000001EC9D0D3C10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"An element could not be located on the page u...\\\\\\node_modules\\\\\\\\appium\\\\\\\\node_modules\\\\\\\\appium-base-driver\\\\\\\\lib\\\\\\\\basedriver\\\\\\\\commands\\\\\\\\find.js:53:10)\"}}'}\n\n    def check_response(self, response: Dict) -> None:\n        try:\n            super().check_response(response)\n        except WebDriverException as wde:\n            if wde.msg == 'No such context found.':\n                raise NoSuchContextException(wde.msg, wde.screen, wde.stacktrace) from wde\n>           raise wde\n\nE:\\pycharm_file\\Chamet_project\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x000001EC9D0D3C10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"An element could not be located on the page u...\\\\\\node_modules\\\\\\\\appium\\\\\\\\node_modules\\\\\\\\appium-base-driver\\\\\\\\lib\\\\\\\\basedriver\\\\\\\\commands\\\\\\\\find.js:53:10)\"}}'}\n\n    def check_response(self, response: Dict) -> None:\n        try:\n>           super().check_response(response)\n\nE:\\pycharm_file\\Chamet_project\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x000001EC9D0D3C10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"An element could not be located on the page u...\\\\\\node_modules\\\\\\\\appium\\\\\\\\node_modules\\\\\\\\appium-base-driver\\\\\\\\lib\\\\\\\\basedriver\\\\\\\\commands\\\\\\\\find.js:53:10)\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.\nE       Stacktrace:\nE       NoSuchElementError: An element could not be located on the page using the given search parameters.\nE           at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\pgk bqt\\AppData\\Local\\Programs\\Appium Server GUI\\resources\\app\\node_modules\\appium\\node_modules\\appium-android-driver\\lib\\commands\\find.js:75:11)\nE           at runMicrotasks (<anonymous>)\nE           at processTicksAndRejections (internal/process/task_queues.js:97:5)\nE           at AndroidUiautomator2Driver.findElOrElsWithProcessing (C:\\Users\\pgk bqt\\AppData\\Local\\Programs\\Appium Server GUI\\resources\\app\\node_modules\\appium\\node_modules\\appium-base-driver\\lib\\basedriver\\commands\\find.js:33:12)\nE           at AndroidUiautomator2Driver.findElement (C:\\Users\\pgk bqt\\AppData\\Local\\Programs\\Appium Server GUI\\resources\\app\\node_modules\\appium\\node_modules\\appium-base-driver\\lib\\basedriver\\commands\\find.js:53:10)\n\nE:\\pycharm_file\\Chamet_project\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_case.test_mypage_multi.Test_multi_mypage object at 0x000001EC9D1F5410>\n\n    @allure.story('我的任务')\n    # @pytest.mark.skip(reason=\"本次不执行\")\n    @allure.severity(allure.severity_level.BLOCKER)\n    @allure.title('用例91-92：我的任务-男-有奖励红点或积分及未领取和领取奖励')\n    def test_homepage91(self):\n        logging.info(\"===我的任务-男-有奖励红点或积分及未领取和领取奖励===\")\n        try:\n            self.multiman.tab_Mine_Btn()\n            self.multiman.tap(970, 2114)\n            global my_Tasks_entryTwoText\n>           my_Tasks_entryTwoText = self.multiman.my_Tasks_entryTwoText()\n\ntest_case\\test_mypage_multi.py:2959: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <common.mypage_multi.multiMypage_man.MultiMan object at 0x000001EC9CE0C350>\n\n    def my_Tasks_entryTwoText(self):\n        try:\n            MyTasks_entry_points = self.driver.find_element(*self.MyTasks_entry_points)\n        except NoSuchElementException:\n            logging.info('没有显示积分，显示新奖励')\n>           MyTasks_entry_rewards = self.driver.find_element(*self.MyTasks_entry_rewards)\n\ncommon\\mypage_multi\\multiMypage_man.py:2749: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.webdriver.WebDriver (session=\"039635be-e5f7-48f3-b5c0-047624c1752f\")>, by = 'xpath'\nvalue = '/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.RelativeL...iew/android.widget.ScrollView/android.widget.LinearLayout/android.widget.RelativeLayout[4]/android.widget.LinearLayout'\n\n    def find_element(self, by: str = AppiumBy.ID, value: Union[str, Dict, None] = None) -> MobileWebElement:\n        \"\"\"\n        Find an element given a AppiumBy strategy and locator\n    \n        Args:\n            by: The strategy\n            value: The locator\n    \n        Usage:\n            driver.find_element(by=AppiumBy.ACCESSIBILITY_ID, value='accessibility_id')\n    \n        Returns:\n            `appium.webdriver.webelement.WebElement`: The found element\n    \n        \"\"\"\n        # We prefer to patch locators in the client code\n        # Checking current context every time a locator is accessed could significantly slow down tests\n        # Check https://github.com/appium/python-client/pull/724 before submitting any issue\n        # if by == By.ID:\n        #     by = By.CSS_SELECTOR\n        #     value = '[id=\"%s\"]' % value\n        # elif by == By.TAG_NAME:\n        #     by = By.CSS_SELECTOR\n        # elif by == By.CLASS_NAME:\n        #     by = By.CSS_SELECTOR\n        #     value = \".%s\" % value\n        # elif by == By.NAME:\n        #     by = By.CSS_SELECTOR\n        #     value = '[name=\"%s\"]' % value\n    \n>       return self.execute(RemoteCommand.FIND_ELEMENT, {'using': by, 'value': value})['value']\n\nE:\\pycharm_file\\Chamet_project\\Lib\\site-packages\\appium\\webdriver\\webdriver.py:387: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.webdriver.WebDriver (session=\"039635be-e5f7-48f3-b5c0-047624c1752f\")>, driver_command = 'findElement'\nparams = {'using': 'xpath', 'value': '/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLay...ew/android.widget.ScrollView/android.widget.LinearLayout/android.widget.RelativeLayout[4]/android.widget.LinearLayout'}\n\n    def execute(self, driver_command: str, params: dict = None) -> dict:\n        \"\"\"Sends a command to be executed by a command.CommandExecutor.\n    \n        :Args:\n         - driver_command: The name of the command to execute as a string.\n         - params: A dictionary of named parameters to send with the command.\n    \n        :Returns:\n          The command's JSON response loaded into a dictionary object.\n        \"\"\"\n        params = self._wrap_value(params)\n    \n        if self.session_id:\n            if not params:\n                params = {\"sessionId\": self.session_id}\n            elif \"sessionId\" not in params:\n                params[\"sessionId\"] = self.session_id\n    \n        response = self.command_executor.execute(driver_command, params)\n        if response:\n>           self.error_handler.check_response(response)\n\nE:\\pycharm_file\\Chamet_project\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x000001EC9D0D3C10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"An element could not be located on the page u...\\\\\\node_modules\\\\\\\\appium\\\\\\\\node_modules\\\\\\\\appium-base-driver\\\\\\\\lib\\\\\\\\basedriver\\\\\\\\commands\\\\\\\\find.js:53:10)\"}}'}\n\n    def check_response(self, response: Dict) -> None:\n        try:\n            super().check_response(response)\n        except WebDriverException as wde:\n            if wde.msg == 'No such context found.':\n                raise NoSuchContextException(wde.msg, wde.screen, wde.stacktrace) from wde\n>           raise wde\n\nE:\\pycharm_file\\Chamet_project\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x000001EC9D0D3C10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"An element could not be located on the page u...\\\\\\node_modules\\\\\\\\appium\\\\\\\\node_modules\\\\\\\\appium-base-driver\\\\\\\\lib\\\\\\\\basedriver\\\\\\\\commands\\\\\\\\find.js:53:10)\"}}'}\n\n    def check_response(self, response: Dict) -> None:\n        try:\n>           super().check_response(response)\n\nE:\\pycharm_file\\Chamet_project\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x000001EC9D0D3C10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"An element could not be located on the page u...\\\\\\node_modules\\\\\\\\appium\\\\\\\\node_modules\\\\\\\\appium-base-driver\\\\\\\\lib\\\\\\\\basedriver\\\\\\\\commands\\\\\\\\find.js:53:10)\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: An element could not be located on the page using the given search parameters.\nE       Stacktrace:\nE       NoSuchElementError: An element could not be located on the page using the given search parameters.\nE           at AndroidUiautomator2Driver.findElOrEls (C:\\Users\\pgk bqt\\AppData\\Local\\Programs\\Appium Server GUI\\resources\\app\\node_modules\\appium\\node_modules\\appium-android-driver\\lib\\commands\\find.js:75:11)\nE           at runMicrotasks (<anonymous>)\nE           at processTicksAndRejections (internal/process/task_queues.js:97:5)\nE           at AndroidUiautomator2Driver.findElOrElsWithProcessing (C:\\Users\\pgk bqt\\AppData\\Local\\Programs\\Appium Server GUI\\resources\\app\\node_modules\\appium\\node_modules\\appium-base-driver\\lib\\basedriver\\commands\\find.js:33:12)\nE           at AndroidUiautomator2Driver.findElement (C:\\Users\\pgk bqt\\AppData\\Local\\Programs\\Appium Server GUI\\resources\\app\\node_modules\\appium\\node_modules\\appium-base-driver\\lib\\basedriver\\commands\\find.js:53:10)\n\nE:\\pycharm_file\\Chamet_project\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_case.test_mypage_multi.Test_multi_mypage object at 0x000001EC9D1F5410>\n\n    @allure.story('我的任务')\n    # @pytest.mark.skip(reason=\"本次不执行\")\n    @allure.severity(allure.severity_level.BLOCKER)\n    @allure.title('用例91-92：我的任务-男-有奖励红点或积分及未领取和领取奖励')\n    def test_homepage91(self):\n        logging.info(\"===我的任务-男-有奖励红点或积分及未领取和领取奖励===\")\n        try:\n            self.multiman.tab_Mine_Btn()\n            self.multiman.tap(970, 2114)\n            global my_Tasks_entryTwoText\n            my_Tasks_entryTwoText = self.multiman.my_Tasks_entryTwoText()\n            if my_Tasks_entryTwoText=='新奖励':\n                logging.info(\"===我的任务-新奖励===\")\n                self.mandriver.find_element(*MultiMan.MyTasks_entry_RightClick).click()\n                time.sleep(2)\n                self.multiman.tap(1061, 111)\n                logging.info(\"===已完成未领取奖励，开始领取===\")\n                if self.multiman.MyTasks_rewards_LeftClickGuideIDEle():\n                    ClickGuideID=self.mandriver.find_element(*MultiMan.MyTasks_rewards_LeftClickGuideID).location\n                    self.mandriver.find_element(*MultiMan.MyTasks_rewards_LeftClickGuideID).click()\n                else:\n                    ClickGuideID = self.mandriver.find_element(*MultiMan.MyTasks_rewards_RightClickGuideID).location\n                    self.mandriver.find_element(*MultiMan.MyTasks_rewards_RightClickGuideID).click()\n                logging.info(\"===领取奖励中===\")\n                assert self.mandriver.find_element(*MultiMan.MyTasks_rewards_CongratsPopoverAwesomeBtn).text == '真棒！'\n                self.mandriver.find_element(*MultiMan.MyTasks_rewards_CongratsPopoverAwesomeBtn).click()\n                time.sleep(2)\n                self.multiman.tap(ClickGuideID['x'], ClickGuideID['y'])\n                logging.info(\"===已完成已领取奖励，弹窗跳转确认===\")\n                assert self.mandriver.find_element(*MultiMan.MyTasks_rewards_RewardDetailsPopoverOkBtn).text == '完成任务获得更多奖励'\n                self.mandriver.find_element(*MultiMan.MyTasks_rewards_RewardDetailsPopoverOkBtn).click()\n                logging.info(\"===已领取奖励的弹窗跳转===\")\n                MyTasks_tab_tasks = self.mandriver.find_element(*MultiMan.MyTasks_tab_tasks)\n                assert MyTasks_tab_tasks.get_attribute('selected') == 'true'\n                logging.info(\"===断言成功===\")\n            else:\n                logging.info(\"===我的任务-具体积分===\")\n                self.mandriver.find_element(*MultiMan.MyTasks_entry_RightClick).click()\n                self.multiman.tap(1061, 111)\n                tasks_points_next = self.mandriver.find_element(*MultiMan.MyTasks_tab_tasks)\n                assert tasks_points_next.get_attribute('selected') == 'true'\n                MyTasks_tab_pointsNumber=self.mandriver.find_element(*MultiMan.MyTasks_tab_pointsNumber).text\n                MyTasks_tab_pointsNumberIcon='{}''\\x20''[points]'.format(MyTasks_tab_pointsNumber)\n                assert MyTasks_tab_pointsNumberIcon==my_Tasks_entryTwoText\n                logging.info(\"===断言成功===\")\n    \n        except AssertionError as e:\n            logging.info('===断言失败===')\n            screen_name = self.multiman.screenshot('我的任务-男-有奖励红点或积分及未领取和领取奖励')\n            logging.info(f'截图成功，图片为{screen_name}')\n            raise\n        except:\n            logging.info(\"===执行失败===\")\n>           screen_name = self.multiman.screenshot('我的任务-男-有奖励红点或积分及未领取和领取奖励')\n\ntest_case\\test_mypage_multi.py:3002: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <common.mypage_multi.multiMypage_man.MultiMan object at 0x000001EC9CE0C350>, module = '我的任务-男-有奖励红点或积分及未领取和领取奖励'\n\n    def screenshot(self, module):\n        time = self.getTime()\n        # image_file = os.path.dirname(os.path.dirname(__file__)) + '/screenshots/my_page/%s_%s.png' % (module, time)\n        image_file = os.path.dirname(os.path.dirname(__file__)) + '../../screenshots/my_page/%s_%s.png' % (module, time)\n        self.driver.get_screenshot_as_file(image_file)\n>       with open(image_file, mode='rb') as f:\nE       FileNotFoundError: [Errno 2] No such file or directory: 'C:\\\\Users\\\\pgk bqt\\\\PycharmProjects\\\\github_Chamet\\\\ChametProject_UI\\\\Mypage_multi\\\\common../../screenshots/my_page/我的任务-男-有奖励红点或积分及未领取和领取奖励_2023-09-05 17_17_03.png'\n\ncommon\\mypage_multi\\mypage_common_fun.py:112: FileNotFoundError"}, "attachments": [{"name": "log", "source": "7617aa98-668d-44b9-bb67-621b0425dc6c-attachment.txt", "type": "text/plain"}], "start": 1693905396938, "stop": 1693905424055, "uuid": "42e26806-918d-4131-9d12-9f93a35ce6f8", "historyId": "dcdf94d6898201db8f74f6ff1ebd9d72", "testCaseId": "dcdf94d6898201db8f74f6ff1ebd9d72", "fullName": "test_case.test_mypage_multi.Test_multi_mypage#test_homepage91", "labels": [{"name": "severity", "value": "blocker"}, {"name": "story", "value": "我的任务"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_mypage_multi"}, {"name": "subSuite", "value": "Test_multi_mypage"}, {"name": "host", "value": "DESKTOP-8OL56K6"}, {"name": "thread", "value": "13560-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_mypage_multi"}]}