{"name": "用例65：通过半屏浮窗给主播送礼物", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidSelectorException: Message: Could not parse selector expression `new UiSelector().text(Moon sighting)`: `UiSelector` doesn't have suitable method `text` with arguments [Moon sighting]: Could not parse selector expression `new UiSelector().text(Moon sighting)`: Moon sighting is not a string\nStacktrace:\nio.appium.uiautomator2.common.exceptions.UiSelectorSyntaxException: Could not parse selector expression `new UiSelector().text(Moon sighting)`: `UiSelector` doesn't have suitable method `text` with arguments [Moon sighting]: Could not parse selector expression `new UiSelector().text(Moon sighting)`: Moon sighting is not a string\n\tat io.appium.uiautomator2.utils.UiExpressionParser.findMethod(UiExpressionParser.java:216)\n\tat io.appium.uiautomator2.utils.UiExpressionParser.consumeMethodCall(UiExpressionParser.java:182)\n\tat io.appium.uiautomator2.utils.UiSelectorParser.parse(UiSelectorParser.java:53)\n\tat io.appium.uiautomator2.utils.UiAutomatorParser.consumeStatement(UiAutomatorParser.java:94)\n\tat io.appium.uiautomator2.utils.UiAutomatorParser.parse(UiAutomatorParser.java:47)\n\tat io.appium.uiautomator2.utils.ElementLocationHelpers.toSelectors(ElementLocationHelpers.java:127)\n\tat io.appium.uiautomator2.utils.ElementLocationHelpers.toSelector(ElementLocationHelpers.java:123)\n\tat io.appium.uiautomator2.utils.ByUiAutomatorFinder.findOne(ByUiAutomatorFinder.java:54)\n\tat io.appium.uiautomator2.utils.ByUiAutomatorFinder.findOne(ByUiAutomatorFinder.java:49)\n\tat io.appium.uiautomator2.handler.FindElement.findElement(FindElement.java:94)\n\tat io.appium.uiautomator2.handler.FindElement.safeHandle(FindElement.java:67)\n\tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:59)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)\n\tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)\n\tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\n\tat java.lang.Thread.run(Thread.java:923)\nCaused by: io.appium.uiautomator2.common.exceptions.UiSelectorSyntaxException: Could not parse selector expression `new UiSelector().text(Moon sighting)`: Moon sighting is not a string\n\tat io.appium.uiautomator2.utils.UiExpressionParser.coerceArgToType(UiExpressionParser.java:284)\n\tat io.appium.uiautomator2.utils.UiExpressionParser.coerceArgsToTypes(UiExpressionParser.java:265)\n\tat io.appium.uiautomator2.utils.UiExpressionParser.findMethod(UiExpressionParser.java:205)\n\t... 44 more", "trace": "self = <test_case.test_10party_mult.Test_multchamet object at 0x000001D352647510>\n\n    @allure.severity(allure.severity_level.BLOCKER)\n    @allure.title('用例65：通过半屏浮窗给主播送礼物')\n    def test_TenParty_065(self):\n        logging.info('===用例65：通过半屏浮窗给主播送礼物===')\n        try:\n            self.multaudience.audience_party_tab_Btn()\n            party_list_num = self.multaudience.party_list()\n            if party_list_num == 0:\n                pytest.skip(\"没有交友房，跳过该测试用例\")\n            self.multaudience.audience_enter_tenparty(self.which_party)\n            self.multaudience.enteranchor_HalfScreen()\n>           self.multaudience.HalfScreen_sendgift(\"Moon sighting\")\n\ntest_10party_mult.py:1421: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\common\\partytencommon\\multparty_ten_audience.py:572: in HalfScreen_sendgift\n    self.audience_sendgift(gift_name)\n..\\common\\partytencommon\\multparty_ten_audience.py:370: in audience_sendgift\n    self.driver.find_element(MobileBy.ANDROID_UIAUTOMATOR, 'text({})'.format(gift_name)).click()\nE:\\pycharm_file\\Chamet_project\\Lib\\site-packages\\appium\\webdriver\\webdriver.py:387: in find_element\n    return self.execute(RemoteCommand.FIND_ELEMENT, {'using': by, 'value': value})['value']\nE:\\pycharm_file\\Chamet_project\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:440: in execute\n    self.error_handler.check_response(response)\nE:\\pycharm_file\\Chamet_project\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py:30: in check_response\n    raise wde\nE:\\pycharm_file\\Chamet_project\\Lib\\site-packages\\appium\\webdriver\\errorhandler.py:26: in check_response\n    super().check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <appium.webdriver.errorhandler.MobileErrorHandler object at 0x000001D352675F10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid selector\",\"message\":\"Could not parse selector expression `new UiS...n\\\\tat io.appium.uiautomator2.utils.UiExpressionParser.findMethod(UiExpressionParser.java:205)\\\\n\\\\t... 44 more\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSelectorException: Message: Could not parse selector expression `new UiSelector().text(Moon sighting)`: `UiSelector` doesn't have suitable method `text` with arguments [Moon sighting]: Could not parse selector expression `new UiSelector().text(Moon sighting)`: Moon sighting is not a string\nE       Stacktrace:\nE       io.appium.uiautomator2.common.exceptions.UiSelectorSyntaxException: Could not parse selector expression `new UiSelector().text(Moon sighting)`: `UiSelector` doesn't have suitable method `text` with arguments [Moon sighting]: Could not parse selector expression `new UiSelector().text(Moon sighting)`: Moon sighting is not a string\nE       \tat io.appium.uiautomator2.utils.UiExpressionParser.findMethod(UiExpressionParser.java:216)\nE       \tat io.appium.uiautomator2.utils.UiExpressionParser.consumeMethodCall(UiExpressionParser.java:182)\nE       \tat io.appium.uiautomator2.utils.UiSelectorParser.parse(UiSelectorParser.java:53)\nE       \tat io.appium.uiautomator2.utils.UiAutomatorParser.consumeStatement(UiAutomatorParser.java:94)\nE       \tat io.appium.uiautomator2.utils.UiAutomatorParser.parse(UiAutomatorParser.java:47)\nE       \tat io.appium.uiautomator2.utils.ElementLocationHelpers.toSelectors(ElementLocationHelpers.java:127)\nE       \tat io.appium.uiautomator2.utils.ElementLocationHelpers.toSelector(ElementLocationHelpers.java:123)\nE       \tat io.appium.uiautomator2.utils.ByUiAutomatorFinder.findOne(ByUiAutomatorFinder.java:54)\nE       \tat io.appium.uiautomator2.utils.ByUiAutomatorFinder.findOne(ByUiAutomatorFinder.java:49)\nE       \tat io.appium.uiautomator2.handler.FindElement.findElement(FindElement.java:94)\nE       \tat io.appium.uiautomator2.handler.FindElement.safeHandle(FindElement.java:67)\nE       \tat io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:59)\nE       \tat io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:266)\nE       \tat io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:260)\nE       \tat io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:68)\nE       \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\nE       \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\nE       \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\nE       \tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\nE       \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\nE       \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\nE       \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\nE       \tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)\nE       \tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)\nE       \tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\nE       \tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)\nE       \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\nE       \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\nE       \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\nE       \tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)\nE       \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\nE       \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\nE       \tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)\nE       \tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\nE       \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)\nE       \tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)\nE       \tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\nE       \tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\nE       \tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)\nE       \tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)\nE       \tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)\nE       \tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)\nE       \tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)\nE       \tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\nE       \tat java.lang.Thread.run(Thread.java:923)\nE       Caused by: io.appium.uiautomator2.common.exceptions.UiSelectorSyntaxException: Could not parse selector expression `new UiSelector().text(Moon sighting)`: Moon sighting is not a string\nE       \tat io.appium.uiautomator2.utils.UiExpressionParser.coerceArgToType(UiExpressionParser.java:284)\nE       \tat io.appium.uiautomator2.utils.UiExpressionParser.coerceArgsToTypes(UiExpressionParser.java:265)\nE       \tat io.appium.uiautomator2.utils.UiExpressionParser.findMethod(UiExpressionParser.java:205)\nE       \t... 44 more\n\nE:\\pycharm_file\\Chamet_project\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: InvalidSelectorException"}, "attachments": [{"name": "party_ten", "source": "841962cc-4477-43c3-a866-f292291de9b5-attachment.png", "type": "image/png"}, {"name": "log", "source": "03e3120f-f1a2-47cf-bcbd-0dd1090ca558-attachment.txt", "type": "text/plain"}], "start": 1688528857762, "stop": 1688528929560, "uuid": "3c61a0ba-5533-4206-a018-a0dfdb467904", "historyId": "7afcf3227e6636b0cd4500266bf577de", "testCaseId": "7afcf3227e6636b0cd4500266bf577de", "fullName": "test_10party_mult.Test_multchamet#test_TenParty_065", "labels": [{"name": "severity", "value": "blocker"}, {"name": "suite", "value": "test_10party_mult"}, {"name": "subSuite", "value": "Test_multchamet"}, {"name": "host", "value": "DESKTOP-8OL56K6"}, {"name": "thread", "value": "19020-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_10party_mult"}]}