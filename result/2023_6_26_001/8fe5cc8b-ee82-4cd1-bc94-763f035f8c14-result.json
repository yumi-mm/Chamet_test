{"name": "用例4：观众进入10人交友房", "status": "broken", "statusDetails": {"message": "FileNotFoundError: [Errno 2] No such file or directory: 'C:\\\\Users\\\\pgk bqt\\\\PycharmProjects\\\\Chamet_project\\\\common/screenshots/party_ten/party_ten_2023-06-26 11_13_12.png'", "trace": "self = <test_case.test_10party_mult.Test_multchamet object at 0x000001F9E02E6C10>\n\n    @allure.severity(allure.severity_level.BLOCKER)\n    @allure.title('用例4：观众进入10人交友房')\n    def test_TenParty_004(self):\n        logging.info('===用例4：观众进入10人交友房===')\n        try:\n            # audienceeparty_Start_End.setup_class(self)\n            self.multaudience.audience_party_tab_Btn()\n            party_list_num = self.multaudience.party_list()\n            if party_list_num == 0:\n>               pytest.skip(\"没有交友房，跳过该测试用例\")\n\ntest_10party_mult.py:88: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nreason = '没有交友房，跳过该测试用例'\n\n    @_with_exception(Skipped)\n    def skip(\n        reason: str = \"\", *, allow_module_level: bool = False, msg: Optional[str] = None\n    ) -> NoReturn:\n        \"\"\"Skip an executing test with the given message.\n    \n        This function should be called only during testing (setup, call or teardown) or\n        during collection by using the ``allow_module_level`` flag.  This function can\n        be called in doctests as well.\n    \n        :param reason:\n            The message to show the user as reason for the skip.\n    \n        :param allow_module_level:\n            Allows this function to be called at module level.\n            Raising the skip exception at module level will stop\n            the execution of the module and prevent the collection of all tests in the module,\n            even those defined before the `skip` call.\n    \n            Defaults to False.\n    \n        :param msg:\n            Same as ``reason``, but deprecated. Will be removed in a future version, use ``reason`` instead.\n    \n        .. note::\n            It is better to use the :ref:`pytest.mark.skipif ref` marker when\n            possible to declare a test to be skipped under certain conditions\n            like mismatching platforms or dependencies.\n            Similarly, use the ``# doctest: +SKIP`` directive (see :py:data:`doctest.SKIP`)\n            to skip a doctest statically.\n        \"\"\"\n        __tracebackhide__ = True\n        reason = _resolve_msg_to_reason(\"skip\", reason, msg)\n>       raise Skipped(msg=reason, allow_module_level=allow_module_level)\nE       Skipped: 没有交友房，跳过该测试用例\n\nE:\\pycharm_file\\Chamet_project\\Lib\\site-packages\\_pytest\\outcomes.py:179: Skipped\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_case.test_10party_mult.Test_multchamet object at 0x000001F9E02E6C10>\n\n    @allure.severity(allure.severity_level.BLOCKER)\n    @allure.title('用例4：观众进入10人交友房')\n    def test_TenParty_004(self):\n        logging.info('===用例4：观众进入10人交友房===')\n        try:\n            # audienceeparty_Start_End.setup_class(self)\n            self.multaudience.audience_party_tab_Btn()\n            party_list_num = self.multaudience.party_list()\n            if party_list_num == 0:\n                pytest.skip(\"没有交友房，跳过该测试用例\")\n            party_username = self.multaudience.audience_enter_tenparty(self.which_party)\n            assert party_username == self.multaudience.party_title()\n            logging.info('===断言成功，成功进入10人交友房===')\n        except AssertionError as e:\n            logging.info('===断言失败===')\n            screen_name = self.multaudience.screenshot('party_ten')\n            logging.info(f'截图成功，图片为{screen_name}')\n            raise\n        except:\n            logging.info(\"===执行失败===\")\n>           screen_name = self.multaudience.screenshot('party_ten')\n\ntest_10party_mult.py:99: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <common.partytencommon.multparty_ten_audience.Multaudience object at 0x000001F9E0312610>, module = 'party_ten'\n\n    def screenshot(self, module):\n        time = self.getTime()\n        image_file = os.path.dirname(os.path.dirname(__file__)) + '/screenshots/party_ten/%s_%s.png' % (module, time)\n        self.driver.get_screenshot_as_file(image_file)\n>       with open(image_file, mode='rb') as f:\nE       FileNotFoundError: [Errno 2] No such file or directory: 'C:\\\\Users\\\\pgk bqt\\\\PycharmProjects\\\\Chamet_project\\\\common/screenshots/party_ten/party_ten_2023-06-26 11_13_12.png'\n\n..\\common\\partytencommon\\multparty_ten_audience.py:76: FileNotFoundError"}, "attachments": [{"name": "log", "source": "d46ca64a-7bbe-48d9-b88d-48eebd6cfbca-attachment.txt", "type": "text/plain"}], "start": 1687749178409, "stop": 1687749193552, "uuid": "04889f25-3ab9-4f3c-8d0e-a3420a6737fa", "historyId": "6e51666f221649e45249df6a775dfc4b", "testCaseId": "6e51666f221649e45249df6a775dfc4b", "fullName": "test_10party_mult.Test_multchamet#test_TenParty_004", "labels": [{"name": "severity", "value": "blocker"}, {"name": "suite", "value": "test_10party_mult"}, {"name": "subSuite", "value": "Test_multchamet"}, {"name": "host", "value": "DESKTOP-8OL56K6"}, {"name": "thread", "value": "3236-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_10party_mult"}]}